<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Developers_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="dev.eventref">
	<title>Events Reference</title>

	<section id="dev.eventref.intro">
		<title>Introduction</title>

		<para>
			In this chapter, an attempt will be made to list all events used (or planned for later use)
			in the MantisBT event system.  Each listed event will include details for the event type, when
			the event is called, and the expected parameters and return values for event callbacks.
		</para>

		<para>
			Here we show an example event definition.  For each event, the event identifier will be listed
			along with the event types (see <xref linkend="dev.events.types" />) in parentheses.  Below that
			should be a concise but thorough description of how the event is called and how to use it.
			Following that should be a list of event parameters (if any), as well as the expected return
			value (if any).
		</para>

		<blockquote id="dev.eventref.example">
			<title>EVENT_EXAMPLE (Default)</title>

			<blockquote>
				<para>
					This is an example event description.
				</para>

				<itemizedlist>
					<title>Parameters</title>
					<listitem><para>&lt;Type&gt;: Description of parameter one</para></listitem>
					<listitem><para>&lt;Type&gt;: Description of parameter two</para></listitem>
				</itemizedlist>

				<itemizedlist>
					<title>Return Value</title>
					<listitem><para>&lt;Type&gt;: Description of return value</para></listitem>
				</itemizedlist>
			</blockquote>
		</blockquote>

	</section>

	<section id="dev.eventref.system">
		<title>System Events</title>

		<para>
			These events are initiated by the plugin system itself to allow certain functionality to
			simplify plugin development.
		</para>

		<blockquote id="dev.eventref.system.plugininit">
			<title>EVENT_PLUGIN_INIT (Execute)</title>

			<blockquote>
				<para>
					This event is triggered by the MantisBT plugin system after all registered and enabled
					plugins have been initialized (their <function>init()</function> functions have been called).
					This event should <emphasis>always</emphasis> be the first event triggered for any
					page load.  No parameters are passed to hooked functions, and no return values are
					expected.
				</para>

				<para>
					This event is the first point in page execution where all registered plugins are
					guaranteed to be enabled (assuming dependencies and such are met).  At any point
					before this event, any or all plugins may not yet be loaded.  Note that the core
					system has not yet completed the bootstrap process when this event is signalled.
				</para>

				<para>
					Suggested uses for the event include:
					<itemizedlist>
						<listitem><para>Checking for plugins that aren't require for normal usage.</para></listitem>
						<listitem><para>Interacting with other plugins outside the context of pages or events.</para></listitem>
					</itemizedlist>
				</para>
			</blockquote>
		</blockquote>

		<blockquote id="dev.eventref.system.coreheaders">
			<title>EVENT_CORE_HEADERS (Execute)</title>

			<blockquote>
				<para>
					This event is triggered by the MantisBT bootstrap process just before emitting the
					headers.  This enables plugins to emit their own headers or use API that enables
					tweaking values of headers emitted by core.  An example, of headers that can be
					tweaked is Content-Security-Policy header which can be tweaked using http_csp_*() APIs.
				</para>
			</blockquote>
		</blockquote>

		<blockquote id="dev.eventref.system.coreready">
			<title>EVENT_CORE_READY (Execute)</title>

			<blockquote>
				<para>
					This event is triggered by the MantisBT bootstrap process after all core APIs have
					been initialized, including the plugin system, but before control is relinquished
					from the bootstrap process back to the originating page.  No parameters are passed
					to hooked functions, and no return values are expected.
				</para>

				<para>
					This event is the first point in page execution where the entire system is considered
					loaded and ready.
				</para>
			</blockquote>
		</blockquote>

		<blockquote id="dev.eventref.system.rest_api_routes">
			<title>EVENT_REST_API_ROUTES (Execute)</title>

			<blockquote>
				<para>
					This event is triggered by MantisBT to enable plugins to register their own routes
					to be accessible via the REST API.  All APIs belonging to a plugin named 'Example',
					MUST live under 'https://.../api/rest/plugins/Example/'.  The route registration is done
					using the Slim Framework app instance that is passed as a parameter.  A route group
					should be used to include all routes for the plugin.  The name of the route group should
					be retrieved via calling plugin_route_group().  See MantisGraph core plugin for an example
					and <ulink url="https://www.slimframework.com/docs/objects/router.html">Slim Framework
					router documentation</ulink>.
				</para>

				<para>
					Before calling into the plugin routes, the user would be already authenticated and
					authorized for API access in general.  However, it is the responsibility of the
					plugin to do its own plugin specific authorization.
				</para>
			</blockquote>
		</blockquote>

		<blockquote id="dev.eventref.system.log">
			<title>EVENT_LOG (Execute)</title>

			<blockquote>
				<para>
					This event is triggered by MantisBT to log a message.  The contents of the message
					should be hyper linked based on the following rules: #123 means issue 123, ~123
					means issue note 123, @P123 means project 123, @U123 means user 123.  Logging plugins
					can capture extra context information  like timestamp, current logged in user, etc.
					This event receives the logging string as a parameter.
				</para>

				<itemizedlist>
					<title>Parameters</title>
					<listitem><para>&lt;String&gt;: the logging string</para></listitem>
				</itemizedlist>
			</blockquote>
		</blockquote>

		<blockquote id="dev.eventref.auth.flags">
			<title>EVENT_AUTH_USER_FLAGS (First)</title>

			<blockquote>
				<para>
					An event that enables plugins to return a set of flags that control the authentication
					behaviors for the user who is logging in or logged in.  In some cases, the user will be
					in the system, but there will be cases where the username provided by the user doesn't
					exist.  In case the user doesn't exist, it is up to the authentication plugin whether
					to fail the login, validate credentials then fail, or validate credentials then auto-provision
					the user based on information the plugin is aware of (e.g. IDP or some db of accounts).
					If no plugin is registered for events, then defaults are used.  If plugin sets a subset
					of the options, then the default will be used for the rest.
				</para>
				<para>
					Checkout <ulink url="https://github.com/mantisbt-plugins/SampleAuth">SampleAuth plugin</ulink>
					for more details.
				</para>
			</blockquote>
		</blockquote>
	</section>

	<xi:include href="Events_Reference_Output.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="Events_Reference_Filter.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="Events_Reference_Bug.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="Events_Reference_Notify.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="Events_Reference_Account.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="Events_Reference_Manage.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />

</chapter>
